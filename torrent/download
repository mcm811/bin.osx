#!/bin/bash

source /usr/local/torrent/download_torrent.sh
[ "$(basename $0 | cut -d_ -f 1)" == "local" ] && set_server_local || set_server_config

DEFUALT_QUALITY=720
DEFAULT_COUNT=100

function download_sync() {
        [ "$(hostname)" == "rasPi" ] && ssh changmin@192.168.0.8 "/usr/local/torrent/download sync" && exit

        SRC_PATH="$HOME/Google Drive/ShellScript.localized/TorrentBin"
        TRG_PATH="/usr/local/torrent"

        #ssh root@r1 "tar cvzf ~pi/torrent/etc.tgz -C /etc ."
        #scp root@r1:~pi/torrent/etc.tgz $HOME/Archives.localized/raspberryPi/

        #backup rasPi1 /etc
        rsync -aCzv --no-g --no-o -e ssh root@r1:/etc/samba/smb.conf $HOME/Archives.localized/raspberryPi/etc/samba/smb.conf
        rsync -aCzv --no-g --no-o -e ssh root@r1:/etc/transmission-daemon/settings.json $HOME/Archives.localized/raspberryPi/etc/transmission-daemon/settings.json

        #backup pi@rasPi1:~/
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/ $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/bin $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/src $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/tor $HOME/Archives.localized/raspberryPi/homePi

        rsync -auzv --no-g --no-o -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/cron_torrent_"* root@r1:/etc/cron.d/
        rsync -auzv --no-g --no-o -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" root@r1:/etc/cron.d/cron_torrent_* "$SRC_PATH"/

        rsync -aCzv --no-g --no-o -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" pi@r1:$TRG_PATH
        rsync -aCzv --no-g --no-o --delete -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" pi@r1:tor

        rsync -aCzv --no-g --no-o --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" $TRG_PATH
        rsync -aCzv --no-g --no-o --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" $HOME/bin/torrent

        rsync -aCzv --no-g --no-o -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:$TRG_PATH/magnet_list_* "$TRG_PATH/" 

        #ssh root@r1 "chown -v root:root /etc/cron.d/cron_torrent_*"
        source ~changmin/bin/backup_rsync.sh
}

function link_file() {
        cd /usr/local/torrent
        for file in download*; do
                file=${file//local_//}
                ln -sfv /usr/local/torrent/$file /usr/local/bin/$file
        done
}

function download_utility() {
        case $1 in
                sync)
                        shift
                        download_sync $@
                        exit
                ;;
                link)
                        link_file
                        exit
                ;;
                clean)
                        find . \( -name ".DS_Store" -or -name ".AppleDouble" -or -name "._*" \) -exec rm -rfv {} \;
                        exit
                ;;
                synclink)
                        link_file
                        ssh root@r1 /usr/local/torrent/download link
                        exit
                ;;
                localized)
                        for file in *; do
                                [ -d "$file" ] && rsync -av "~changmin/Documents/.localized ./$file/.localized"
                        done
                        exit
                ;;
        esac
}

function download_magnet() {
        case $1 in
                purge)
                        shift
                        purge_torrent $@
                        exit
                ;;
                cleanup)
                        source /usr/local/torrent/download_rebuild_torrent.sh
                        shift
                        cleanup_raspi_dropbox
                        rebuild_raspi_dropbox
                        exit
                ;;
                rebuild)
                        source /usr/local/torrent/download_rebuild_torrent.sh
                        shift
                        rebuild_torrent $@
                        exit
                ;;
                magnet*)
                        add_magnet -a $@
                        purge_torrent
                        exit
                ;;
        esac
}

function download_site() {
        local page_number=1
        local site=$1
        shift
        case $1 in
                login)
                        download_login_$site
                ;;
                ent)
                        shift
                        [ $# -eq 1 ] && page_number=$1
                        download_$site ent $DEFAULT_COUNT $page_number $DEFAULT_QUALITY
                ;;
                drama)
                        shift
                        [ $# -eq 1 ] && page_number=$1
                        download_$site drama $DEFAULT_COUNT $page_number $DEFAULT_QUALITY
                ;;
                social)
                        shift
                        [ $# -eq 1 ] && page_number=$1
                        download_$site social $DEFAULT_COUNT $page_number $DEFAULT_QUALITY
                ;;
                ep)
                        shift
                        local ep_start=$1
                        shift
                        local ep_end=$1
                        shift
                        local ep_quality=$1
                        shift
                        local ep_name="$*"
                        for ep_number in $(seq $ep_start $ep_end); do
                                download_torrent_$site 1 1 1 "${ep_quality}" "${ep_name}.E${ep_number}."
                                download_torrent_$site 1 1 1 "${ep_quality}" "${ep_name}.E0${ep_number}."
                        done
                ;;
                *)
                        download_torrent_$site "$@"
                ;;
        esac
}

case $1 in
	kim|cor|pon)
		download_site $@
		purge_torrent
	;;
	drama|ent|social|ep)
		download_site cor $@
		download_site kim $@
		download_site pon $@
		purge_torrent
	;;
	*)
		download_magnet $@
		download_utility $@
		if [ $# -eq 0 ]; then
			download_torrent_help
			read -p "검색할 토렌트 이름을 입력하세요:" searchTorrent
			[ "$searchTorrent" != "" ] && download_torrent "$searchTorrent"
		else
			download_torrent $@
		fi
		purge_torrent
	;;
esac

