#!/bin/bash

source /usr/local/torrent/download_torrent.sh
[ "$(basename $0 | cut -d_ -f 1)" == "local" ] && set_server_local || set_server_config

function download_sync() {
        [ "$(hostname)" == "rasPi" ] && ssh changmin@192.168.0.8 "/usr/local/torrent/download sync" && exit

        SRC_PATH="$HOME/Google Drive/ShellScript.localized/TorrentBin"
        TRG_PATH="/usr/local/torrent"

        #ssh root@r1 "tar cvzf ~pi/torrent/etc.tgz -C /etc ."
        #scp root@r1:~pi/torrent/etc.tgz $HOME/Archives.localized/raspberryPi/

        #backup rasPi1 /etc
        rsync -aCzv --no-g --no-o -e ssh root@r1:/etc/samba/smb.conf $HOME/Archives.localized/raspberryPi/etc/samba/smb.conf
        rsync -aCzv --no-g --no-o -e ssh root@r1:/etc/transmission-daemon/settings.json $HOME/Archives.localized/raspberryPi/etc/transmission-daemon/settings.json

        #backup pi@rasPi1:~/
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/ $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/bin $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/src $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/tor $HOME/Archives.localized/raspberryPi/homePi

        rsync -auzv --no-g --no-o -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/cron_torrent_"* root@r1:/etc/cron.d/
        rsync -auzv --no-g --no-o -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" root@r1:/etc/cron.d/cron_torrent_* "$SRC_PATH"/

        rsync -aCzv --no-g --no-o -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" pi@r1:$TRG_PATH
        rsync -aCzv --no-g --no-o --delete -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" pi@r1:tor

        rsync -aCzv --no-g --no-o --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" $TRG_PATH
        rsync -aCzv --no-g --no-o --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" $HOME/bin/torrent

        rsync -aCzv --no-g --no-o -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:$TRG_PATH/magnet_list_* "$TRG_PATH/" 

        #ssh root@r1 "chown -v root:root /etc/cron.d/cron_torrent_*"
        source ~changmin/bin/backup_rsync.sh
}

function link_file() {
        cd /usr/local/torrent
        for file in download*; do
                file=${file//local_//}
                ln -sfv /usr/local/torrent/$file /usr/local/bin/$file
        done
}

function download_utility() {
        case $1 in
                sync)
                        shift
                        download_sync $@
                        exit
                ;;
                link)
                        link_file
                        exit
                ;;
                clean)
                        find . \( -name ".DS_Store" -or -name ".AppleDouble" -or -name "._*" \) -exec rm -rfv {} \;
                        exit
                ;;
                synclink)
                        link_file
                        ssh root@r1 /usr/local/torrent/download link
                        exit
                ;;
                localized)
                        for file in *; do
                                [ -d "$file" ] && rsync -av "~changmin/Documents/.localized ./$file/.localized"
                        done
                        exit
                ;;
        esac
}

function download_magnet() {
        case $1 in
                purge)
                        shift
                        purge_torrent $@
                        exit
                ;;
                cleanup)
                        source /usr/local/torrent/download_rebuild_torrent.sh
                        shift
                        cleanup_raspi_dropbox
                        rebuild_raspi_dropbox
                        exit
                ;;
                rebuild)
                        source /usr/local/torrent/download_rebuild_torrent.sh
                        shift
                        rebuild_torrent $@
                        exit
                ;;
                magnet*)
                        add_magnet -a $@
                        purge_torrent
                        exit
                ;;
        esac
}

function download_kim() {
        case $1 in
                drama)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_drama_kim 100 $PG_NUM 720
                ;;
                ent)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_ent_kim 100 $PG_NUM 720
                        exit
                ;;
                social)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_social_kim 100 $PG_NUM 720
                        exit
                ;;
                ep)
                        shift
                        EP_START=$1
                        shift
                        EP_END=$1
                        shift
                        EP_QUALITY=$1
                        shift
                        EP_NAME="$*"
                        for EP_NUM in $(eval echo {$EP_START..$EP_END}); do
                                download_torrent_kim 1 1 1 "${EP_QUALITY}" "${EP_NAME}.E${EP_NUM}."
                                download_torrent_kim 1 1 1 "${EP_QUALITY}" "${EP_NAME}.E0${EP_NUM}."
                        done
                        purge_torrent
                        exit
                ;;
                *)
                        download_torrent_kim "$@"
                        purge_torrent
                        exit
                ;;
        esac
}

function download_pong() {
        case $1 in
                drama)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_drama_pong 100 $PG_NUM 720
                ;;
                ent)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_ent_pong 100 $PG_NUM 720
                ;;
                social)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_social_pong 100 $PG_NUM 720
                ;;
                ep)
                        shift
                        EP_START=$1
                        shift
                        EP_END=$1
                        shift
                        EP_QUALITY=$1
                        shift
                        EP_NAME="$*"
                        for EP_NUM in $(eval echo {$EP_START..$EP_END}); do
                                download_torrent_pong 1 1 1 "${EP_QUALITY}" "${EP_NAME}.E${EP_NUM}."
                                download_torrent_pong 1 1 1 "${EP_QUALITY}" "${EP_NAME}.E0${EP_NUM}."
                        done
                        purge_torrent
                ;;
                *)
                        download_torrent_pong "$@"
                        purge_torrent
                        exit
                ;;
        esac
}

function download_cor() {
        case $1 in
                login)
                        login_tcorea
                ;;
                drama)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_drama_cor 100 $PG_NUM 720
                ;;
                ent)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_ent_cor 100 $PG_NUM 720
                ;;
                social)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_social_cor 100 $PG_NUM 720
                ;;
                ep)
                        shift
                        EP_START=$1
                        shift
                        EP_END=$1
                        shift
                        EP_QUALITY=$1
                        shift
                        EP_NAME="$*"
                        for EP_NUM in $(eval echo {$EP_START..$EP_END}); do
                                download_torrent_cor 1 1 1 "${EP_QUALITY}" "${EP_NAME}.E${EP_NUM}."
                                download_torrent_cor 1 1 1 "${EP_QUALITY}" "${EP_NAME}.E0${EP_NUM}."
                        done
                        purge_torrent
                ;;
                *)
                        download_torrent_cor "$@"
                        purge_torrent
                ;;
        esac
}

function download_default() {
        case $1 in
                drama)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_drama_cor 100 $PG_NUM 720
                        download_drama_kim 100 $PG_NUM 720
                        download_drama_pong 100 $PG_NUM 720
                ;;
                ent)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_ent_cor 100 $PG_NUM 720
                        download_ent_kim 100 $PG_NUM 720
                        download_ent_pong 100 $PG_NUM 720
                ;;
                social)
                        shift
                        PG_NUM=1
                        [ $# -eq 1 ] && PG_NUM=$1
                        download_social_cor 100 $PG_NUM 720
                        download_social_kim 100 $PG_NUM 720
                        download_social_pong 100 $PG_NUM 720
                ;;
                ep)
                        shift
                        EP_START=$1
                        shift
                        EP_END=$1
                        shift
                        EP_QUALITY=$1
                        shift
                        EP_NAME="$*"
                        for EP_NUM in $(eval echo {$EP_START..$EP_END}); do
                                download_torrent_cor 1 1 1 "${EP_QUALITY}" "${EP_NAME}.E${EP_NUM}."
                                download_torrent_cor 1 1 1 "${EP_QUALITY}" "${EP_NAME}.E0${EP_NUM}."
                        done
                        purge_torrent
                ;;
                *)
                        if [ $# -eq 0 ]; then
                                download_torrent_help
                                read -p "검색할 토렌트 이름을 입력하세요:" searchTorrent
                                [ "$searchTorrent" != "" ] && download_torrent "$searchTorrent"
                                purge_torrent
                        else
                                download_torrent $@
                                purge_torrent
                        fi
                ;;
        esac
}

case $1 in
	kim)
                shift
                download_kim $@
	;;
	pon*)
	shift
                download_pong $@
	;;
        cor)
                shift
                download_cor $@
        ;;
	*)
                download_magnet $@
                download_utility $@
                download_default $@
	;;
esac
