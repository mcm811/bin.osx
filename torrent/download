#!/bin/bash

if [ "$1" == "sync" ]; then
        [ "$(hostname)" == "rasPi" ] && ssh changmin@192.168.0.7 "/usr/local/torrent/download sync" && exit

        SRC_PATH="$HOME/Google Drive/ShellScript/TorrentBin"
        TRG_PATH="/usr/local/torrent"

        #ssh root@r1 "tar cvzf ~pi/torrent/etc.tgz -C /etc ."
        #scp root@r1:~pi/torrent/etc.tgz $HOME/Archives.localized/raspberryPi/

        #backup rasPi1 /etc
        rsync -aCzv -e ssh root@r1:/etc/samba/smb.conf $HOME/Archives.localized/raspberryPi/etc/samba/smb.conf
        rsync -aCzv -e ssh root@r1:/etc/transmission-daemon/settings.json $HOME/Archives.localized/raspberryPi/etc/transmission-daemon/settings.json

        #backup pi@rasPi1:~/
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/ $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/bin $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/src $HOME/Archives.localized/raspberryPi/homePi
        #rsync -azv -e ssh --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" pi@r1:~/tor $HOME/Archives.localized/raspberryPi/homePi

        rsync -auzv -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/cron_torrent_"* root@r1:/etc/cron.d/
        rsync -auzv -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" root@r1:/etc/cron.d/cron_torrent_* "$SRC_PATH"/

        rsync -aCzv --delete -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" root@r1:$TRG_PATH
        rsync -aCzv --delete -e ssh --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" pi@r1:tor

        rsync -aCzv --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" $TRG_PATH
        rsync -aCzv --delete --exclude-from="/usr/local/torrent/rsync_exclude_pattern.txt" "$SRC_PATH/" $HOME/bin/torrent

        ssh root@r1 "chown -v root:root /etc/cron.d/cron_torrent_*"
        source ~changmin/bin/backup_rsync.sh

        exit
fi

function link_file() {
        cd /usr/local/torrent
        for FILE in download*; do
                FILE=$(echo $FILE | sed -e 's/local_//g')
                ln -sfv /usr/local/torrent/$FILE /usr/local/bin/$FILE
        done
}

if [ "$1" == "link" ]; then
        link_file
        exit
fi

source /usr/local/torrent/download_torrent.sh
[ "$(basename $0 | cut -d_ -f 1)" == "local" ] && set_server_local || set_server_config

if [ "$1" == "purge" ]; then
        shift
        purge_torrent $@
        exit
fi

if [ "$1" == "cleanup" ]; then
        source /usr/local/torrent/download_rebuild_torrent.sh
        shift
        cleanup_raspi_dropbox
        rebuild_raspi_dropbox
        exit
fi

if [ "$1" == "rebuild" ]; then
        source /usr/local/torrent/download_rebuild_torrent.sh
        shift
        rebuild_torrent $@
        exit
fi

if [ "$1" == "clean" ]; then
        find . \( -name ".DS_Store" -or -name ".AppleDouble" -or -name "._*" \) -exec rm -rfv {} \;
        exit
fi

if [ "$1" == "synclink" ]; then
        link_file
        ssh root@r1 /usr/local/torrent/download link
        exit
fi

if [ "$1" == "kim" ]; then
        shift
        download_torrent_kim "$@"
        purge_torrent
        exit
fi

if [ "$1" == "drama" ]; then
        shift
        [ $# -eq 0 ] && download_drama 100 1 720
        [ $# -eq 1 ] && download_drama 100 $1 720
        exit
fi

if [ "$1" == "ent" ]; then
        shift
        [ $# -eq 0 ] && download_ent 100 1 720
        [ $# -eq 1 ] && download_ent 100 $1 720
        exit
fi

if [ "$1" == "social" ]; then
        shift
        [ $# -eq 0 ] && download_social 100 1 720
        [ $# -eq 1 ] && download_social 100 $1 720
        exit
fi

if [ $# -eq 0 ]; then
        download_torrent_help
        read -p "검색할 토렌트 이름을 입력하세요:" searchTorrent
        [ "$searchTorrent" != "" ] && download_torrent "$searchTorrent"
        purge_torrent
elif [ "$(echo "$@" | cut -d: -f1)" == "magnet" ]; then
        add_magnet -a $@
        purge_torrent
else
        download_torrent $@
        purge_torrent
fi
